Krotki zarys:

Aplikacja skałada się z trzech podstron:

-autryzacji (auth):
	*mozna sie zalogowac/zarejestrowac, dostep do aplikacji jest natychmiatowy
	*za pomoca js sprawdzane sa formularze na identycznosc hasla i email'a podczas rejestracji;
		za pomoca jquery ustawiany jest odpowiedni status znajdujacy sie nad stopka strony

-strony glownej (simulator):
	*tu znajduje sie plansza z gra oraz panel kontrolny
	*do dyspozycji sa dwa tryby gry {'zabawa', 'symulacje'}
	*w trybie symulacje wlaczone sa dodatkowe opcje sprawdzania konca ewolucji ukladu i wysylania symulacji na serwer
	+najperw nalezy ustawic wymiary planszy i wcisnac przycisk ustaw, wtedy mozna ustawic stan komorek na planszy poprzez klikniecie w nie,
	+dostepne sa przyciski start ktory wlacza interwal ewolucji oraz nastepny krok ktory wykonuje jeden cykl ewolucji
	+mozliwa jest tez zmiana czasu intrwalu ewolucji (takze podczas dzialania ewolucji)
	+suwak i nastepny krok sa wylaczone w trybie symulacje
	*za pomoca jquery aktualizowane sa wartosci w panelu kontrolnym
	
-strona listy symulacji (list_simulator):
	*tutaj znajduje sie lista zapisanych symulacji wraz z kilkoma wlasciwosciami

Aplikacja bazuje na konwencji restfulowej (na tyle ile sie to udalo) i w dazy do modelu mvc (na ile to bylo mozliwe).
Strona zbudowana jest w oparciu o szablony phtml uzupelniane wstawkami php. Wykorzystywana jest baza mongodb.
Plansze rysowane są w opraciu o canvas html5.

------------------------------------
interesujace pliki js znajduja sie w:
------------------------------------

auth/js/init.js

simulator/js/board.js
simulator/js/cell.js
simulator/js/game.js
simulator/js/init.js
simulator/js/period_finder.js
simulator/js/storage.js


list/js/draw.js
list/js/form.js
list/js/graph.js
list/js/init.js
list/js/draw.js

Wiecej informacji w komentarzach kodu.

Zastrzeżenia:
Lista rekordów (kolejna podstrona), przycisk reset, przycisk usuń nie są jeszcze w pełni sprawne.
Pusty obszar po prawej strone w liście symulacji to także wina nie dokończonych javascriptów.
	





